{"version":3,"sources":["components/Navbar/Navbar.js","components/Art/Art.js","artData.js","components/ArtList/index.js","components/header.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","class","href","Art","state","showInfo","handleInfo","setState","this","props","art","id","des","img","name","info","removeArt","src","alt","onClick","Component","artData","ArtList","arts","sortedArts","filter","map","key","header","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+UAGe,SAASA,IACpB,OAAQ,yBAAKC,UAAU,UACnB,uBAAGC,MAAM,+BAEV,wBAAID,UAAU,aACV,4BACI,uBAAGE,KAAK,IAAIF,UAAU,YAAtB,SAIJ,4BACI,uBAAGE,KAAK,IAAIF,UAAU,YAAtB,UAIJ,4BACI,uBAAGE,KAAK,IAAIF,UAAU,YAAtB,c,UCdMG,E,2MACjBC,MAAQ,CACJC,UAAS,G,EAEbC,WAAa,WACT,EAAKC,SAAS,CACVF,UAAW,EAAKD,MAAMC,Y,wEAIpB,IAAD,EACgCG,KAAKC,MAAMC,IAAxCC,EADH,EACGA,GAAIC,EADP,EACOA,IAAKC,EADZ,EACYA,IAAKC,EADjB,EACiBA,KAAMC,EADvB,EACuBA,KACpBC,EAAcR,KAAKC,MAAnBO,UAER,OACA,6BAAShB,UAAU,OAC3B,yBAAKA,UAAU,iBACX,yBAAKiB,IAAKJ,EAAKK,IAAI,YACnB,0BAAMlB,UAAU,YAAYmB,QAAS,kBAAMH,EAAUL,KACjD,uBAAGX,UAAU,0BAGrB,yBAAKA,UAAU,YACP,4BAAKc,GACT,4BAAKF,EAAK,IACV,0BAAMO,QAASX,KAAKF,YAChB,uBAAGN,UAAU,mCAGZQ,KAAKJ,MAAMC,UAAY,2BAAIU,S,GA7BHK,aCLpBC,G,MAAU,CACrB,CACEV,GAAI,EACJG,KAAM,YACND,IAAK,qBACLD,IAAK,yBACLG,KACE,kJAEJ,CACEJ,GAAI,EACJG,KAAM,cACND,IAAK,qBACLD,IAAK,yBACLG,KACE,kJAEJ,CACEJ,GAAI,EACJG,KAAM,YACND,IAAK,qBACLD,IAAK,yBACLG,KACE,kJAEJ,CACEJ,GAAI,EACJG,KAAM,qBACND,IAAK,qBACLD,IAAK,yBACLG,KACE,oJC1BeO,E,2MACjBlB,MAAQ,CACRmB,KAAMF,G,EAENL,UAAY,SAAAL,GAAO,IAETa,EADW,EAAKpB,MAAdmB,KACgBE,QAAO,SAAAf,GAAG,OAAIA,EAAIC,KAAOA,KACjD,EAAKJ,SAAS,CACZgB,KAAMC,K,wEAIF,IAAD,OAEGD,EAASf,KAAKJ,MAAdmB,KACR,OACI,6BAASvB,UAAU,WACduB,EAAKG,KAAI,SAAAhB,GAAG,OACb,kBAAC,EAAD,CAAKiB,IAAKjB,EAAIC,GAAID,IAAKA,EAAKM,UAAW,EAAKA,oB,GAlBvBI,aCHtB,SAASQ,IACpB,OACI,6BACA,2C,ICcOC,E,iLAVX,OACE,oCACE,kBAAC9B,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANUqB,aCKEU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ecfb5132.chunk.js","sourcesContent":["import React from 'react';\nimport \"./navbar.scss\";\n\nexport default function Navbar() {\n    return  <nav className=\"navbar\">\n        <i class=\"fab fa-angrycreative fa-5x\"></i>\n    \n       <ul className=\"nav-links\">\n           <li>\n               <a href=\"/\" className=\"nav-link\">\n                   Home\n                   </a>\n           </li>\n           <li>\n               <a href=\"/\" className=\"nav-link\">\n                   About\n                   </a>\n           </li>\n           <li>\n               <a href=\"/\" className=\"nav-link\">\n                   Kontakt\n                   </a>\n           </li>\n           </ul>\n\n        </nav>\n}\n","import React, { Component } from 'react';\nimport \"./art.scss\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\n\nexport default class Art extends Component {\n    state = {\n        showInfo:false\n    };\n    handleInfo = () =>{\n        this.setState({\n            showInfo: !this.state.showInfo\n        });\n    };\n    // id, city usw. kriegen wir von this.props.tour\n    render() {\n        const { id, des, img, name, info } = this.props.art; \n        const { removeArt } = this.props;\n\n        return (\n        <article className=\"art\">\n<div className=\"img-container\">\n    <img src={img} alt=\"wannado\" />\n    <span className=\"close-btn\" onClick={() => removeArt(id)}>\n        <i className=\"fas fa-window-close\" />\n    </span>\n</div>\n<div className=\"art-info\">\n        <h3>{name}</h3>\n    <h5>{des}{\" \"}\n    <span onClick={this.handleInfo}>\n        <i className=\"far fa-arrow-alt-circle-down\" />\n            </span>\n        </h5>\n        {this.state.showInfo && <p>{info}</p>}\n    </div>\n        </article>\n        );\n    }\n}\n","export const artData = [\n  {\n    id: 1,\n    name: \"Lettering\",\n    img: \"./img/wannado1.jpg\",\n    des: \"This is my description\",\n    info:\n      \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Tenetur, nam omnis error corrupti eum assumenda enim odit architecto corporis. Sequi\"\n  },\n  {\n    id: 2,\n    name: \"Flower Girl\",\n    img: \"./img/wannado2.jpg\",\n    des: \"This is my description\",\n    info:\n      \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Tenetur, nam omnis error corrupti eum assumenda enim odit architecto corporis. Sequi\"\n  },\n  {\n    id: 3,\n    name: \"Comic Art\",\n    img: \"./img/wannado3.jpg\",\n    des: \"This is my description\",\n    info:\n      \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Tenetur, nam omnis error corrupti eum assumenda enim odit architecto corporis. Sequi\"\n  },\n  {\n    id: 4,\n    name: \"Minimalistic Waves\",\n    img: \"./img/wannado4.jpg\",\n    des: \"This is my description\",\n    info:\n      \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Tenetur, nam omnis error corrupti eum assumenda enim odit architecto corporis. Sequi\"\n  }\n];\n","import React, { Component } from 'react'\nimport Art from \"../Art/Art\";\nimport \"./artlist.scss\";\nimport {artData} from \"../../artData\";\n\nexport default class ArtList extends Component {\n    state = {\n    arts: artData\n    };\n    removeArt = id => {\n        const { arts } = this.state;\n        const sortedArts = arts.filter(art => art.id !== id);\n        this.setState({\n          arts: sortedArts\n        });\n    };\n\n    render() {\n     //   console.log(this.state.tours);\n        const { arts } = this.state;\n        return (\n            <section className=\"artlist\">\n                {arts.map(art => (\n                <Art key={art.id} art={art} removeArt={this.removeArt} />\n                ))}           \n            </section>\n        );\n    }\n}\n","import React from 'react'\n\nexport default function header() {\n    return (\n        <div>\n        <h1>Wanna Do's</h1>\n\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport ArtList from \"./components/ArtList\";\nimport Header from \"./components/header\"\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Navbar />\n        <Header />\n        <ArtList />\n        </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}